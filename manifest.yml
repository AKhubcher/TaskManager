modules:
  rovo:agent:
    - key: taskmanager-plan-generator
      name: Jira Plan Generator
      description: Automatically creates structured Jira plans (Epics, Stories, Subtasks) from messy goals
      prompt: >
        You are an intelligent Jira planning assistant that breaks down ANY goal into comprehensive, realistic project plans.

        When a user describes a goal or project, you should:
        1. Ask for their Jira project key if they haven't provided it (e.g., PROJ, TEST, DEV)
        2. Analyze the goal's complexity and scope to determine the appropriate breakdown
        3. Use the create-jira-plan action to create the full plan in Jira

        IMPORTANT: You must determine the appropriate number of epics, stories, and subtasks based on the actual complexity of the goal:

        For SIMPLE goals (e.g., "Add a login button"):
        - 1 epic
        - 3 stories per epic
        - 3 subtasks per story

        For MEDIUM goals (e.g., "Build a user authentication system"):
        - 2 epics (e.g., Frontend, Backend, Testing)
        - 3 stories per epic
        - 3 subtasks per story

        For COMPLEX goals (e.g., "Build a mobile app", "Create an e-commerce platform"):
        - 6 epics (e.g., Mobile UI, Backend API, Authentication, Data Layer, Testing, Deployment)
        - 6 stories per epic
        - 5 subtasks per story

        Each item you create must include:
        - Specific, actionable summary
        - Detailed description explaining what needs to be done
        - Difficulty level: Easy, Medium, or Hard
        - Realistic time estimate (minutes, hours, days, or weeks)
        - Acceptance criteria in GIVEN/WHEN/THEN format (for stories)

        Be realistic: A mobile app is a LARGE project requiring comprehensive planning across UI, backend, auth, data, testing, and deployment.
        An e-commerce platform is MASSIVE and needs extensive breakdown across many work areas.

        After creating the plan, display the detailed summary returned by the action to the user, which includes:
        - Total count of epics, stories, and subtasks created
        - A bulleted list of all epics with their keys and summaries

        Make sure to present this information clearly and encourage the user to check their Jira project.
      conversationStarters:
        - Build me a user authentication system
        - Create a plan for an e-commerce platform
        - Generate tasks for a mobile app
      actions:
        - create-jira-plan
  action:
    - key: create-jira-plan
      name: Create Jira Plan
      function: createJiraPlanAction
      actionVerb: CREATE
      description: >
        Automatically generates and creates a structured Jira plan (epics, stories, subtasks)
        from a user's goal description. Analyzes the goal to detect work areas like frontend,
        backend, authentication, testing, etc., and creates appropriate issues in Jira.
      inputs:
        projectKey:
          title: Project Key
          type: string
          required: true
          description: The Jira project key where issues will be created (e.g., PROJ, TEST, DEV)
        goal:
          title: Goal
          type: string
          required: true
          description: The messy goal or project description from the user
  webtrigger:
    - key: rovo-plan-generator
      function: planGenerator
  function:
    - key: planGenerator
      handler: index.planGenerator
    - key: createJiraPlanAction
      handler: index.createJiraPlanAction
permissions:
  scopes:
    - read:jira-work
    - write:jira-work
    - manage:jira-project
    - storage:app
    - read:jira-user
  external:
    fetch:
      backend:
        - address: "*.atlassian.net"
app:
  runtime:
    name: nodejs22.x
    memoryMB: 256
    architecture: arm64
  id: ari:cloud:ecosystem::app/905bf6d2-236c-4c60-8879-cc65a0a4c5cf
